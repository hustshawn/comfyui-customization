---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: comfyui-inputs-pv
spec:
  capacity:
    storage: 1200Gi # ignored, required
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  mountOptions:
    - allow-delete
    - prefix inputs/
    - region us-west-2
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume-inputs # need to be unique
    volumeAttributes:
      bucketName: comfyui-storage-20250921-us-west-2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: comfyui-inputs-pvc
spec:
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # required for static provisioning
  resources:
    requests:
      storage: 1200Gi # ignored, required
  volumeName: comfyui-inputs-pv

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: comfyui-outputs-pv
spec:
  capacity:
    storage: 1200Gi # ignored, required
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  mountOptions:
    - allow-delete
    - prefix outputs/
    - region us-west-2
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume-outputs # need to be unique
    volumeAttributes:
      bucketName: comfyui-storage-20250921-us-west-2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: comfyui-outputs-pvc
spec:
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # required for static provisioning
  resources:
    requests:
      storage: 1200Gi # ignored, required
  volumeName: comfyui-outputs-pv

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: comfyui
  namespace: default
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: comfyui
  serviceName: comfyui-service
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: comfyui
    spec:
      nodeSelector:
        # node.kubernetes.io/instance-type: p5.4xlarge
        # node.kubernetes.io/instance-type: g6e.12xlarge
        karpenter.k8s.aws/instance-family: g6e
        # karpenter.k8s.aws/instance-family: p5en
      initContainers:
      - name: install-comfyui-manager
        image: &common-image 985955614379.dkr.ecr.us-west-2.amazonaws.com/comfyui-images:latest
        command: ['sh', '-c']
        args:
        - |
          if [ ! -d "/app/ComfyUI/custom_nodes/ComfyUI-Manager" ]; then
            echo "Installing ComfyUI-Manager..."
            cd /app/ComfyUI/custom_nodes
            git clone https://github.com/ltdrdata/ComfyUI-Manager.git
            echo "ComfyUI-Manager installed successfully"
          else
            echo "ComfyUI-Manager already exists, skipping installation"
          fi
        volumeMounts:
        - mountPath: /app/ComfyUI/custom_nodes
          name: comfyui-ebs-pvc
          subPath: custom_nodes
      containers:
      - name: comfyui
        image: *common-image
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8188
          protocol: TCP
        resources:
          limits:
            nvidia.com/gpu: "1"
            memory: "200Gi"
        securityContext:
          allowPrivilegeEscalation: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /app/ComfyUI/models
          name: comfyui-ebs-pvc
          subPath: models
        - mountPath: /app/ComfyUI/custom_nodes
          name: comfyui-ebs-pvc
          subPath: custom_nodes
        - mountPath: /app/ComfyUI/user/default/workflows
          name: comfyui-ebs-pvc
          subPath: workflows
        - mountPath: /app/ComfyUI/input
          name: comfyui-inputs
        - mountPath: /app/ComfyUI/output
          name: comfyui-outputs
        - mountPath: /app/ComfyUI/output/videos
          name: video-storage
      restartPolicy: Always
      volumes:
      - name: comfyui-inputs
        persistentVolumeClaim:
          claimName: comfyui-inputs-pvc
      - name: comfyui-outputs
        persistentVolumeClaim:
          claimName: comfyui-outputs-pvc
      - hostPath:
          path: /mnt/k8s-disks/0/videos
          type: DirectoryOrCreate
        name: video-storage
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: comfyui-ebs-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 500Gi
      storageClassName: gp3
      volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  name: comfyui-service
  labels:
    app: comfyui
spec:
  selector:
    app: comfyui
  ports:
  - port: 8188
    protocol: TCP
    targetPort: http
  type: ClusterIP

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: comfyui-ingress
#   annotations:
#     # alb.ingress.kubernetes.io/group.name: shared-alb
#     alb.ingress.kubernetes.io/certificate-arn: xxxxxx
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=300
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80, "HTTPS": 443 }]'
# spec:
#   ingressClassName: alb
#   rules:
#     - host: your-host-name
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: comfyui-service
#               port:
#                 number: 8848